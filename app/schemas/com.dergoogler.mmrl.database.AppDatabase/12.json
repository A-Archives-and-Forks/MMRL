{
  "formatVersion": 1,
  "database": {
    "version": 12,
    "identityHash": "252ac2671173069a3e5e38af7c9150d8",
    "entities": [
      {
        "tableName": "repos",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`url` TEXT NOT NULL, `name` TEXT NOT NULL, `enable` INTEGER NOT NULL, `submission` TEXT, `website` TEXT, `cover` TEXT, `description` TEXT, `donate` TEXT, `support` TEXT, `version` INTEGER NOT NULL, `timestamp` REAL NOT NULL, `size` INTEGER NOT NULL, PRIMARY KEY(`url`))",
        "fields": [
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enable",
            "columnName": "enable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "submission",
            "columnName": "submission",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cover",
            "columnName": "cover",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "donate",
            "columnName": "donate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "support",
            "columnName": "support",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metadata.version",
            "columnName": "version",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "metadata.timestamp",
            "columnName": "timestamp",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "metadata.size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "url"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "localModules_updatable",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `updatable` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatable",
            "columnName": "updatable",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "onlineModules",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `repoUrl` TEXT NOT NULL, `name` TEXT NOT NULL, `version` TEXT NOT NULL, `versionCode` INTEGER NOT NULL, `author` TEXT NOT NULL, `description` TEXT NOT NULL, `maxApi` INTEGER, `minApi` INTEGER, `size` INTEGER, `categories` TEXT, `icon` TEXT, `homepage` TEXT, `donate` TEXT, `support` TEXT, `cover` TEXT, `screenshots` TEXT, `license` TEXT, `readme` TEXT, `verified` INTEGER, `require` TEXT, `devices` TEXT, `arch` TEXT, `permissions` TEXT, `magiskManager` TEXT, `kernelsuManager` TEXT, `apatchManager` TEXT, `magisk` TEXT, `kernelsu` TEXT, `apatch` TEXT, `title` TEXT, `message` TEXT, `service` INTEGER, `postFsData` INTEGER, `resetprop` INTEGER, `sepolicy` INTEGER, `zygisk` INTEGER, `apks` INTEGER, `webroot` INTEGER, `postMount` INTEGER, `bootCompleted` INTEGER, `action` INTEGER, `type` TEXT NOT NULL, `added` REAL, `source` TEXT NOT NULL, `antifeatures` TEXT, `blId` TEXT, `blSource` TEXT, `blNotes` TEXT, `blAntiFeatures` TEXT, PRIMARY KEY(`id`, `repoUrl`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "repoUrl",
            "columnName": "repoUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "versionCode",
            "columnName": "versionCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxApi",
            "columnName": "maxApi",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minApi",
            "columnName": "minApi",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "categories",
            "columnName": "categories",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "homepage",
            "columnName": "homepage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "donate",
            "columnName": "donate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "support",
            "columnName": "support",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cover",
            "columnName": "cover",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "screenshots",
            "columnName": "screenshots",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "license",
            "columnName": "license",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "readme",
            "columnName": "readme",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "verified",
            "columnName": "verified",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "require",
            "columnName": "require",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "devices",
            "columnName": "devices",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "arch",
            "columnName": "arch",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "manager.magisk",
            "columnName": "magiskManager",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "manager.kernelsu",
            "columnName": "kernelsuManager",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "manager.apatch",
            "columnName": "apatchManager",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "root.magisk",
            "columnName": "magisk",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "root.kernelsu",
            "columnName": "kernelsu",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "root.apatch",
            "columnName": "apatch",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "note.title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "note.message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "features.service",
            "columnName": "service",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.postFsData",
            "columnName": "postFsData",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.resetprop",
            "columnName": "resetprop",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.sepolicy",
            "columnName": "sepolicy",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.zygisk",
            "columnName": "zygisk",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.apks",
            "columnName": "apks",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.webroot",
            "columnName": "webroot",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.postMount",
            "columnName": "postMount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.bootCompleted",
            "columnName": "bootCompleted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "features.action",
            "columnName": "action",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "track.type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "track.added",
            "columnName": "added",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "track.source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "track.antifeatures",
            "columnName": "antifeatures",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blacklist.blId",
            "columnName": "blId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blacklist.blSource",
            "columnName": "blSource",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blacklist.blNotes",
            "columnName": "blNotes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blacklist.blAntiFeatures",
            "columnName": "blAntiFeatures",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "repoUrl"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "versions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `repoUrl` TEXT NOT NULL, `timestamp` REAL NOT NULL, `version` TEXT NOT NULL, `versionCode` INTEGER NOT NULL, `zipUrl` TEXT NOT NULL, `changelog` TEXT NOT NULL, PRIMARY KEY(`id`, `repoUrl`, `versionCode`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "repoUrl",
            "columnName": "repoUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "versionCode",
            "columnName": "versionCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "zipUrl",
            "columnName": "zipUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "changelog",
            "columnName": "changelog",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "repoUrl",
            "versionCode"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "localModules",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `version` TEXT NOT NULL, `versionCode` INTEGER NOT NULL, `author` TEXT NOT NULL, `description` TEXT NOT NULL, `state` TEXT NOT NULL, `size` INTEGER NOT NULL, `updateJson` TEXT NOT NULL, `lastUpdated` INTEGER NOT NULL, `webui` INTEGER NOT NULL, `action` INTEGER NOT NULL, `service` INTEGER NOT NULL, `postFsData` INTEGER NOT NULL, `resetprop` INTEGER NOT NULL, `sepolicy` INTEGER NOT NULL, `zygisk` INTEGER NOT NULL, `apks` INTEGER NOT NULL, `postMount` INTEGER NOT NULL, `bootCompleted` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "versionCode",
            "columnName": "versionCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updateJson",
            "columnName": "updateJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdated",
            "columnName": "lastUpdated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.webui",
            "columnName": "webui",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.action",
            "columnName": "action",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.service",
            "columnName": "service",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.postFsData",
            "columnName": "postFsData",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.resetprop",
            "columnName": "resetprop",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.sepolicy",
            "columnName": "sepolicy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.zygisk",
            "columnName": "zygisk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.apks",
            "columnName": "apks",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.postMount",
            "columnName": "postMount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features.bootCompleted",
            "columnName": "bootCompleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "blacklist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`blId` TEXT NOT NULL, `blSource` TEXT NOT NULL, `blNotes` TEXT, `blAntiFeatures` TEXT, PRIMARY KEY(`blId`))",
        "fields": [
          {
            "fieldPath": "blId",
            "columnName": "blId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "blSource",
            "columnName": "blSource",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "blNotes",
            "columnName": "blNotes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blAntiFeatures",
            "columnName": "blAntiFeatures",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "blId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '252ac2671173069a3e5e38af7c9150d8')"
    ]
  }
}