name: Telegram CI

on:
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
            distribution: 'zulu'
            java-version: 21

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
            validate-wrappers: true
            gradle-home-cache-cleanup: true

      - name: Build with Gradle
        run: ./gradlew assembleDebugMin

      - name: Get release name
        if: success() && github.ref == 'refs/heads/main'
        id: release-name
        run: |
            name=`ls app/build/outputs/apk/debugMin/*.apk | awk -F '(/|.apk)' '{print $6}'` && echo "name=${name}" >> $GITHUB_OUTPUT
      
      - name: Get commit info and build timestamp
        id: meta
        run: |
            COMMIT_HASH=$(git rev-parse --short HEAD)
            BUILD_DATE=$(date +"%Y-%m-%d %H:%M:%S")
            echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
            echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV

      - name: Upload files to Telegram
        uses: xz-dev/TelegramFileUploader@v1
        with:
            to-who: '@MMRLCI'
            message: "Build from commit ${{ env.COMMIT_HASH }} on ${{ env.BUILD_DATE}}. Note: This build may use a different signing key."
            files: app/build/outputs/apk/debugMin/*.apk
            env:
                API_ID: ${{ secrets.API_ID }}
                API_HASH: ${{ secrets.API_HASH }}
                BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Upload built apk
        if: success() && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
            name: ${{ steps.release-name.outputs.name }}
            path: app/build/outputs/apk/debugMin/*.apk

      - name: Upload mappings
        if: success() && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
            name: mappings
            path: app/build/outputs/mapping/debugMin
