name: Build APK

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: "Build Type"
        type: string
        required: true

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    outputs:
      release-name: ${{ steps.release-name.outputs.name }}
    steps:
      - name: Parse input
        run: |
            BUILD_TYPE_CASED=$(echo "${{ inputs.buildType }}" | sed 's/^\(.\)/\L\1/')
            echo "BUILD_TYPE_CASED=$BUILD_TYPE_CASED" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
            fetch-depth: 0
    
      - name: Set up signing key
        run: |
            if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
                echo keyStorePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> signing.properties
                echo keyAlias='${{ secrets.KEY_ALIAS }}' >> signing.properties
                echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> signing.properties
                echo keyStore='${{ github.workspace }}/key.jks' >> signing.properties
                echo ${{ secrets.KEY_STORE }} | base64 --decode > ${{ github.workspace }}/key.jks
            fi

      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.3.1
        with:
            validate-wrappers: true
            cache-cleanup: always

      - name: Build APK
        run: chmod 755 gradlew && ./gradlew assemble${{ inputs.buildType }}

      - name: Get release name
        id: release-name
        run: |
            name=`ls app/build/outputs/apk/${{ env.BUILD_TYPE_CASED }}/*.apk | awk -F '(/|.apk)' '{print $6}'` && echo "name=${name}" >> $GITHUB_OUTPUT

      - name: Find APK
        id: find_apk
        run: |
          APK_PATH=$(find app/build/outputs/apk/${{ env.BUILD_TYPE_CASED }} -name "*.apk" | head -n 1)
          echo "APK_PATH=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Find mapping file
        id: normal_mapping
        run: |
          MAPPING_PATH=$(find app/build/outputs/mapping/${{ env.BUILD_TYPE_CASED }} -name "mapping.txt" | head -n 1)
          echo "MAPPING_PATH=$MAPPING_PATH" >> $GITHUB_OUTPUT

      - name: Upload mapping as artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: mapping
          path: ${{ steps.normal_mapping.outputs.MAPPING_PATH }}

      - name: Upload apk as artifact
        uses: actions/upload-artifact@v4.6.2
        with:
            name: ${{ steps.release-name.outputs.name }}
            path: ${{ steps.find_apk.outputs.APK_PATH }}