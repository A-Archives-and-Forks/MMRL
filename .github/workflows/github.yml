name: Release to GitHub

on:
  workflow_call:
    inputs:
      title:
        type: string
        required: true
      message:
        type: string
        required: true
      releaseAssetName:
        type: string
        required: true

jobs:
  release-gh:
    name: Release GH
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
            fetch-depth: 0

      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.releaseAssetName }}
          path: release-apk

      - name: Download Mappings
        uses: actions/download-artifact@v4
        with:
          name: mapping
          path: mapping

      - name: Find Release APK
        id: find_release_apk
        run: |
          APK_PATH=$(find release-apk -name "*.apk" | head -n 1)
          echo "APK_PATH=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Find mapping file
        id: find_mapping
        run: |
          MAPPING_PATH=$(find mapping -name "mapping.txt" | head -n 1)
          echo "MAPPING_PATH=$MAPPING_PATH" >> $GITHUB_OUTPUT

      - name: Get commit info and build timestamp
        id: meta
        run: |
          BUILD_DATE=$(date +"%Y-%m-%d %H:%M:%S")
          COMMIT_COUNT=$(git rev-list --count HEAD)
          VERSION=$((31320 + COMMIT_COUNT))
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view v${{ env.VERSION }} --repo ${{ github.repository }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Create GitHub Release
        if: steps.check_release.outputs.exists == 'false'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body: |
            ${{ inputs.title }}
            #ci_${{ env.VERSION }}
            
            Build on ${{ env.BUILD_DATE }}.
            
            ## What's new?
              
            ${{ inputs.message }}
            
            [Workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Upload Release APK to GitHub
        if: steps.check_release.outputs.exists == 'false'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_release_apk.outputs.APK_PATH }}
          asset_name: release.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Upload mapping to GitHub
        if: steps.check_release.outputs.exists == 'false'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_mapping.outputs.MAPPING_PATH }}
          asset_name: mapping.txt
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}